/*
 * Samsung API
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#define PROG_DESC(img_num) \
		description { \
			state: img_num 0.0; \
			rel1 { relative: 0.05 0.05; to: "bg_area"; } \
			rel2 { relative: 342/360 270/360; to: "bg_area"; } \
			fixed: 1 1; \
			color: 134 229 127 255; \
			image { \
				normal: "timer_progress_"img_num".png"; \
			} \
			visible: 1; \
		}

#define PROG_PROG(img_num) \
		program { \
			signal: "starting_"img_num; \
			source: "progress"; \
			action: STATE_SET img_num 0.0; \
			target: "progress_bar"; \
		}

images {
	image: "time_picker_bg.png" COMP;
	image: "time_picker_control_dot.png" COMP;
	image: "timer_bg_cover.png" COMP;
	image: "timer_btn_reset.png" COMP;
	image: "timer_btn_play_ic.png" COMP;
	image: "timer_progress_bg.png" COMP;
	image: "timer_progress_60.png" COMP;
	image: "timer_progress_59.png" COMP;
	image: "timer_progress_58.png" COMP;
	image: "timer_progress_57.png" COMP;
	image: "timer_progress_56.png" COMP;
	image: "timer_progress_55.png" COMP;
	image: "timer_progress_54.png" COMP;
	image: "timer_progress_53.png" COMP;
	image: "timer_progress_52.png" COMP;
	image: "timer_progress_51.png" COMP;
	image: "timer_progress_50.png" COMP;
	image: "timer_progress_49.png" COMP;
	image: "timer_progress_48.png" COMP;
	image: "timer_progress_47.png" COMP;
	image: "timer_progress_46.png" COMP;
	image: "timer_progress_45.png" COMP;
	image: "timer_progress_44.png" COMP;
	image: "timer_progress_43.png" COMP;
	image: "timer_progress_42.png" COMP;
	image: "timer_progress_41.png" COMP;
	image: "timer_progress_40.png" COMP;
	image: "timer_progress_39.png" COMP;
	image: "timer_progress_38.png" COMP;
	image: "timer_progress_37.png" COMP;
	image: "timer_progress_36.png" COMP;
	image: "timer_progress_35.png" COMP;
	image: "timer_progress_34.png" COMP;
	image: "timer_progress_33.png" COMP;
	image: "timer_progress_32.png" COMP;
	image: "timer_progress_31.png" COMP;
	image: "timer_progress_30.png" COMP;
	image: "timer_progress_29.png" COMP;
	image: "timer_progress_28.png" COMP;
	image: "timer_progress_27.png" COMP;
	image: "timer_progress_26.png" COMP;
	image: "timer_progress_25.png" COMP;
	image: "timer_progress_24.png" COMP;
	image: "timer_progress_23.png" COMP;
	image: "timer_progress_22.png" COMP;
	image: "timer_progress_21.png" COMP;
	image: "timer_progress_20.png" COMP;
	image: "timer_progress_19.png" COMP;
	image: "timer_progress_18.png" COMP;
	image: "timer_progress_17.png" COMP;
	image: "timer_progress_16.png" COMP;
	image: "timer_progress_15.png" COMP;
	image: "timer_progress_14.png" COMP;
	image: "timer_progress_13.png" COMP;
	image: "timer_progress_12.png" COMP;
	image: "timer_progress_11.png" COMP;
	image: "timer_progress_10.png" COMP;
	image: "timer_progress_9.png" COMP;
	image: "timer_progress_8.png" COMP;
	image: "timer_progress_7.png" COMP;
	image: "timer_progress_6.png" COMP;
	image: "timer_progress_5.png" COMP;
	image: "timer_progress_4.png" COMP;
	image: "timer_progress_3.png" COMP;
	image: "timer_progress_2.png" COMP;
	image: "timer_progress_1.png" COMP;
}

collections {
	group {
		name: "main";
		parts {
			part {
				name: "bg_area";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					color: 0 0 0 255;
					fixed: 1 1;
				}
				description {
					state: "starting" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					color: 0 87 102 255;
					fixed: 1 1;
				}
			}
			part {
				name: "bg_cover";
				type: RECT;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					color: 0 0 0 100;
					fixed: 1 1;
				}
			}
			part {
				name: "time_picker";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "bg_area"; }
					rel2 { relative: 1.0 1.0; to: "bg_area"; }
					fixed: 1 1;
					image {
						normal: "time_picker_bg.png";
					}
				}
				description {
					state: "starting" 0.0;
					rel1 { relative: 0.0 0.0; to: "bg_area"; }
					rel2 { relative: 1.0 1.0; to: "bg_area"; }
					fixed: 1 1;
					visible: 0;
					image {
						normal: "time_picker_bg.png";
					}
				}
			}
			part {
				name: "progress_bar_area";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.05 0.05; to: "bg_area"; }
					rel2 { relative: 342/360 270/360; to: "bg_area"; }
					fixed: 1 1;
					visible: 0;
					image {
						normal: "timer_progress_bg.png";
					}
				}
				description {
					state: "starting" 0.0;
					rel1 { relative: 0.05 0.05; to: "bg_area"; }
					rel2 { relative: 342/360 270/360; to: "bg_area"; }
					fixed: 1 1;
					visible: 1;
					image {
						normal: "timer_progress_bg.png";
					}
				}
			}
			part {
				name: "progress_bar";
				type: IMAGE;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.05 0.05; to: "bg_area"; }
					rel2 { relative: 342/360 270/360; to: "bg_area"; }
					fixed: 1 1;
					visible: 0;
				}
				PROG_DESC("60");
				PROG_DESC("59");
				PROG_DESC("58");
				PROG_DESC("57");
				PROG_DESC("56");
				PROG_DESC("55");
				PROG_DESC("54");
				PROG_DESC("53");
				PROG_DESC("52");
				PROG_DESC("51");
				PROG_DESC("50");
				PROG_DESC("49");
				PROG_DESC("48");
				PROG_DESC("47");
				PROG_DESC("46");
				PROG_DESC("45");
				PROG_DESC("44");
				PROG_DESC("43");
				PROG_DESC("42");
				PROG_DESC("41");
				PROG_DESC("40");
				PROG_DESC("39");
				PROG_DESC("38");
				PROG_DESC("37");
				PROG_DESC("36");
				PROG_DESC("35");
				PROG_DESC("34");
				PROG_DESC("33");
				PROG_DESC("32");
				PROG_DESC("31");
				PROG_DESC("30");
				PROG_DESC("29");
				PROG_DESC("28");
				PROG_DESC("27");
				PROG_DESC("26");
				PROG_DESC("25");
				PROG_DESC("24");
				PROG_DESC("23");
				PROG_DESC("22");
				PROG_DESC("21");
				PROG_DESC("20");
				PROG_DESC("19");
				PROG_DESC("18");
				PROG_DESC("17");
				PROG_DESC("16");
				PROG_DESC("15");
				PROG_DESC("14");
				PROG_DESC("13");
				PROG_DESC("12");
				PROG_DESC("11");
				PROG_DESC("10");
				PROG_DESC("9");
				PROG_DESC("8");
				PROG_DESC("7");
				PROG_DESC("6");
				PROG_DESC("5");
				PROG_DESC("4");
				PROG_DESC("3");
				PROG_DESC("2");
				PROG_DESC("1");
			}
			part {
				name: "start_button";
				type: SWALLOW;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.4 0.2; }
					rel2 { relative: 0.6 0.4; }
					fixed: 1 1;
				}
			}
			part {
				name: "hour";
				type: SWALLOW;
				description{
					state: "default" 0.0;
					rel1 { relative: 0.2 0.6; to: "bg_area"; }
					rel2 { relative: 0.4 0.8; to: "bg_area"; }
					fixed: 1 1;
				}
			}
			part {
				name: "minute";
				type: SWALLOW;
				description{
					state: "default" 0.0;
					rel1 { relative: 0.4 0.6; to: "bg_area"; }
					rel2 { relative: 0.6 0.8; to: "bg_area"; }
					fixed: 1 1;
				}
			}
			part {
				name: "second";
				type: SWALLOW;
				description{
					state: "default" 0.0;
					rel1 { relative: 0.6 0.6; to: "bg_area"; }
					rel2 { relative: 0.8 0.8; to: "bg_area"; }
					fixed: 1 1;
				}
			}
			part {
				name: "left_colon";
				type: SWALLOW;
				description{
					state: "default" 0.0;
					rel1 { relative: 0.85 0.2; to: "hour"; }
					rel2 { relative: 0.15 0.8; to: "minute"; }
					fixed: 1 1;
				}
			}
			part {
				name: "right_colon";
				type: SWALLOW;
				description{
					state: "default" 0.0;
					rel1 { relative: 0.85 0.2; to: "minute"; }
					rel2 { relative: 0.15 0.8; to: "second"; }
					fixed: 1 1;
				}
			}
		}
		programs {
			program {
				signal: "timer_start";
				source: "bg";
				action: STATE_SET "starting" 0.0;
				target: "bg_area";
				target: "time_picker";
				target: "progress_bar_area";
			}
			program {
				signal: "timer_end";
				source: "bg";
				action: STATE_SET "default" 0.0;
				target: "bg_area";
				target: "time_picker";
				target: "progress_bar_area";
			}
			program {
				signal: "timer_end";
				source: "progress";
				action: STATE_SET "default" 0.0;
				target: "progress_bar";
			}
			PROG_PROG("1");
			PROG_PROG("2");
			PROG_PROG("3");
			PROG_PROG("4");
			PROG_PROG("5");
			PROG_PROG("6");
			PROG_PROG("7");
			PROG_PROG("8");
			PROG_PROG("9");
			PROG_PROG("10");
			PROG_PROG("11");
			PROG_PROG("12");
			PROG_PROG("13");
			PROG_PROG("14");
			PROG_PROG("15");
			PROG_PROG("16");
			PROG_PROG("17");
			PROG_PROG("18");
			PROG_PROG("19");
			PROG_PROG("20");
			PROG_PROG("21");
			PROG_PROG("22");
			PROG_PROG("23");
			PROG_PROG("24");
			PROG_PROG("25");
			PROG_PROG("26");
			PROG_PROG("27");
			PROG_PROG("28");
			PROG_PROG("29");
			PROG_PROG("30");
			PROG_PROG("31");
			PROG_PROG("32");
			PROG_PROG("33");
			PROG_PROG("34");
			PROG_PROG("35");
			PROG_PROG("36");
			PROG_PROG("37");
			PROG_PROG("38");
			PROG_PROG("39");
			PROG_PROG("40");
			PROG_PROG("41");
			PROG_PROG("42");
			PROG_PROG("43");
			PROG_PROG("44");
			PROG_PROG("45");
			PROG_PROG("46");
			PROG_PROG("47");
			PROG_PROG("48");
			PROG_PROG("49");
			PROG_PROG("50");
			PROG_PROG("51");
			PROG_PROG("52");
			PROG_PROG("53");
			PROG_PROG("54");
			PROG_PROG("55");
			PROG_PROG("56");
			PROG_PROG("57");
			PROG_PROG("58");
			PROG_PROG("59");
			PROG_PROG("60");
		}
	}
	group {
		name: "start_btn";
		parts {
			part {
				name: "btn_bg";
				type: RECT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					visible: 0;
					fixed: 1 1;
				}
			}
			part {
				name: "btn";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "btn_bg"; }
					rel2 { relative: 1.0 0.7; to: "btn_bg"; }
					fixed: 1 1;
				}
			}
			part {
				name: "btn_img";
				type: IMAGE;
				mouse_events: 1;
				repeat_events: 1;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; to: "btn"; }
					rel2 { relative: 1.0 1.0; to: "btn"; }
					fixed: 1 1;
					image {
						normal: "timer_btn_play_ic.png";
					}
				}
				description {
					state: "reset" 0.0;
					rel1 { relative: 0.0 0.0; to: "btn"; }
					rel2 { relative: 1.0 1.0; to: "btn"; }
					fixed: 1 1;
					image {
						normal: "timer_btn_reset.png";
					}
				}
			}
			part {
				name: "btn_txt";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.8; }
					rel2 { relative: 1.0 1.0; }
					text {
						font: "Tizen:style = regular";
						size: 15;
						min: 1 1;
						text: "START";
					}
					fixed: 1 1;

				}
				description {
					state: "reset" 0.0;
					rel1 { relative: 0.0 0.8; }
					rel2 { relative: 1.0 1.0; }
					text {
						font: "Tizen:style = regular";
						size: 15;
						min: 1 1;
						text: "RESET";
					}
					fixed: 1 1;

				}
			}
		}
		programs {
			program {
				signal: "timer_start";
				source: "btn";
				action: STATE_SET "reset" 0.0;
				target: "btn_img";
				target: "btn_txt";
			}
			program {
				signal: "timer_end";
				source: "btn";
				action: STATE_SET "default" 0.0;
				target: "btn_img";
				target: "btn_txt";
			}
		}
	}
	group {
		name: "hour";
		parts {
			part {
				name: "hour_bg";
				type: RECT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					visible: 0;
					fixed: 1 1;
				}
			}
			part {
				name: "hour_title";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 0.2; }
					text {
						font: "Tizen:style = regular";
						size: 20;
						min: 1 1;
						text: "Hrs";
					}
					fixed: 1 1;

				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.0 0.0; offset: 0 -15; }
					rel2 { relative: 1.0 0.2; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
						text: "Hrs";
					}
					fixed: 1 1;

				}
			}
			part {
				name: "val";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.3 0.25; }
					rel2 { relative: 0.7 1.0; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
					}
					fixed: 1 1;
				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.3 0.25; offset: 0 -15; }
					rel2 { relative: 0.7 1.0; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 40;
						min: 1 1;
					}
					fixed: 1 1;
				}
			}
		}
		programs {
			program {
				signal: "hour_selected";
				source: "hour";
				action: STATE_SET "selected" 0.0;
				target: "hour_title";
				target: "val";
			}
			program {
				signal: "hour_deselected";
				source: "hour";
				action: STATE_SET "default" 0.0;
				target: "hour_title";
				target: "val";
			}
		}
	}
	group {
		name: "minute";
		parts {
			part {
				name: "minute_bg";
				type: RECT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					visible: 0;
					fixed: 1 1;
				}
			}
			part {
				name: "minute_title";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 0.2; }
					text {
						font: "Tizen:style = regular";
						size: 20;
						min: 1 1;
						text: "Min";
					}
					fixed: 1 1;
				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.0 0.0; offset: 0 -15; }
					rel2 { relative: 1.0 0.2; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
						text: "Min";
					}
					fixed: 1 1;
				}
			}
			part {
				name: "val";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.3 0.25; }
					rel2 { relative: 0.7 1.0; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
					}
					fixed: 1 1;
				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.3 0.25; offset: 0 -15; }
					rel2 { relative: 0.7 1.0; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 40;
						min: 1 1;
					}
					fixed: 1 1;
				}
			}
		}
		programs {
			program {
				signal: "minute_selected";
				source: "minute";
				action: STATE_SET "selected" 0.0;
				target: "minute_title";
				target: "val";
			}
			program {
				signal: "minute_deselected";
				source: "minute";
				action: STATE_SET "default" 0.0;
				target: "minute_title";
				target: "val";
			}
		}
	}
	group {
		name: "second";
		parts {
			part {
				name: "second_bg";
				type: RECT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 1.0; }
					visible: 0;
					fixed: 1 1;
				}
			}
			part {
				name: "second_title";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.0 0.0; }
					rel2 { relative: 1.0 0.2; }
					text {
						font: "Tizen:style = regular";
						size: 20;
						min: 1 1;
						text: "Sec";
					}
					fixed: 1 1;

				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.0 0.0; offset: 0 -15; }
					rel2 { relative: 1.0 0.2; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
						text: "Sec";
					}
					fixed: 1 1;

				}
			}
			part {
				name: "val";
				type: TEXT;
				description {
					state: "default" 0.0;
					rel1 { relative: 0.3 0.25; }
					rel2 { relative: 0.7 1.0; }
					text {
						font: "Tizen:style = regular";
						size: 30;
						min: 1 1;
					}
					fixed: 1 1;
				}
				description {
					state: "selected" 0.0;
					rel1 { relative: 0.3 0.25; offset: 0 -15; }
					rel2 { relative: 0.7 1.0; offset: 0 10; }
					text {
						font: "Tizen:style = regular";
						size: 40;
						min: 1 1;
					}
					fixed: 1 1;
				}
			}
		}
		programs {
			program {
				signal: "second_selected";
				source: "second";
				action: STATE_SET "selected" 0.0;
				target: "second_title";
				target: "val";
			}
			program {
				signal: "second_deselected";
				source: "second";
				action: STATE_SET "default" 0.0;
				target: "second_title";
				target: "val";
			}
		}
	}
